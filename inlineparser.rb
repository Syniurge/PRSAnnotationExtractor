#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module CSSPool
  module CSS
    class InlineParserBase < Racc::Parser

module_eval(<<'...end inlineparser.y/module_eval...', 'inlineparser.y', 119)

def numeric thing
  thing = thing.gsub(/[^\d.]/, '')
  Integer(thing) rescue Float(thing)
end

def interpret_identifier s
  interpret_escapes s
end

def interpret_uri s
  interpret_escapes s.match(/^url\((.*)\)$/mu)[1].strip.match(/^(['"]?)((?:\\.|.)*)\1$/mu)[2]
end

def interpret_string s
  interpret_escapes s.match(/^(['"])((?:\\.|.)*)\1$/mu)[2]
end

def interpret_escapes s
  token_exp = /\\([0-9a-fA-F]{1,6}(?:\r\n|\s)?)|\\(.)|(.)/mu
  characters = s.scan(token_exp).map do |u_escape, i_escape, ident|
    if u_escape
      code = u_escape.chomp.to_i 16
      code = 0xFFFD if code > 0x10FFFF
      [code].pack('U')
    elsif i_escape
      if i_escape == "\n"
        ''
      else
        i_escape
      end
    else
      ident
    end
  end.join ''
end
...end inlineparser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    25,     4,    37,    48,     9,     4,     5,    47,    23,    40,
     5,    49,    50,    51,    38,    22,    11,    36,    10,    27,
    35,    29,    28,    30,    31,    32,    33,    34,    24,    25,
    40,    37,     8,     7,    58,    40,     6,    23,    40,   nil,
   nil,   nil,   nil,   nil,    22,   nil,    36,   nil,    27,    35,
    29,    28,    30,    31,    32,    33,    34,    24,    25,   nil,
    37,   nil,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,
   nil,   nil,   nil,    22,   nil,    36,   nil,    27,    35,    29,
    28,    30,    31,    32,    33,    34,    24,    25,   nil,    37,
    55,   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,
   nil,   nil,    22,   nil,    36,   nil,    27,    35,    29,    28,
    30,    31,    32,    33,    34,    24,    25,   nil,    37,   nil,
   nil,   nil,   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    36,   nil,    27,    35,    29,    28,    30,
    31,    32,    33,    34,    24,    25,   nil,    37,   nil,    42,
   nil,   nil,   nil,    23,   nil,   nil,    44,   nil,   nil,   nil,
    22,   nil,    36,    43,    27,    35,    29,    28,    30,    31,
    32,    33,    34,    24,    25,   nil,    37,    14,   nil,   nil,
   nil,   nil,    23,   nil,   nil,   nil,   nil,   nil,   nil,    22,
   nil,    36,   nil,    27,    35,    29,    28,    30,    31,    32,
    33,    34,    24,    36,   nil,    27,    35,    29,    28,    30,
    31,    32,    33,    34 ]

racc_action_check = [
    14,     7,    14,    18,     3,     0,     7,    16,    14,    13,
     0,    19,    20,    21,     9,    14,     6,    14,     5,    14,
    14,    14,    14,    14,    14,    14,    14,    14,    14,    55,
    41,    55,     3,     2,    52,    54,     1,    55,    60,   nil,
   nil,   nil,   nil,   nil,    55,   nil,    55,   nil,    55,    55,
    55,    55,    55,    55,    55,    55,    55,    55,    45,   nil,
    45,   nil,   nil,   nil,   nil,   nil,    45,   nil,   nil,   nil,
   nil,   nil,   nil,    45,   nil,    45,   nil,    45,    45,    45,
    45,    45,    45,    45,    45,    45,    45,    38,   nil,    38,
    38,   nil,   nil,   nil,   nil,    38,   nil,   nil,   nil,   nil,
   nil,   nil,    38,   nil,    38,   nil,    38,    38,    38,    38,
    38,    38,    38,    38,    38,    38,    22,   nil,    22,   nil,
   nil,   nil,   nil,   nil,    22,   nil,   nil,   nil,   nil,   nil,
   nil,    22,   nil,    22,   nil,    22,    22,    22,    22,    22,
    22,    22,    22,    22,    22,    15,   nil,    15,   nil,    15,
   nil,   nil,   nil,    15,   nil,   nil,    15,   nil,   nil,   nil,
    15,   nil,    15,    15,    15,    15,    15,    15,    15,    15,
    15,    15,    15,    15,     8,   nil,     8,     8,   nil,   nil,
   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,     8,
   nil,     8,   nil,     8,     8,     8,     8,     8,     8,     8,
     8,     8,     8,    26,   nil,    26,    26,    26,    26,    26,
    26,    26,    26,    26 ]

racc_action_pointer = [
    -1,    36,    28,    -3,   nil,    12,    16,    -5,   170,   -21,
   nil,   nil,   nil,   -24,    -4,   141,     0,   nil,    -4,     4,
     5,     6,   112,   nil,   nil,   nil,   182,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    83,   nil,
   nil,    -3,   nil,   nil,   nil,    54,   nil,   nil,   nil,   nil,
   nil,   nil,    16,   nil,     2,    25,   nil,   nil,   nil,   nil,
     5,   nil ]

racc_action_default = [
   -45,   -45,    -3,   -45,   -10,   -45,   -45,    -2,   -45,   -45,
   -11,    62,    -1,    -9,   -45,   -17,   -18,   -19,   -20,   -21,
   -22,   -23,   -45,   -27,   -29,   -31,   -45,   -33,   -34,   -35,
   -36,   -37,   -38,   -39,   -40,   -41,   -42,   -44,   -45,    -4,
    -8,    -9,   -12,   -13,   -14,   -45,   -16,   -43,   -30,   -28,
   -26,   -24,   -45,   -32,    -9,   -45,    -5,   -15,   -25,    -6,
    -9,    -7 ]

racc_goto_table = [
    39,    13,     1,    45,    53,   nil,   nil,    41,    46,    12,
   nil,   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    56,   nil,
   nil,    54,   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,
   nil,    59,   nil,   nil,   nil,   nil,   nil,    61,    60 ]

racc_goto_check = [
     5,     4,     1,     6,     9,   nil,   nil,     4,     4,     1,
   nil,   nil,   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,
   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,     4,   nil,
   nil,     5,   nil,   nil,   nil,   nil,   nil,     5,     4 ]

racc_goto_pointer = [
   nil,     2,   nil,   nil,    -7,   -13,   -12,   nil,   nil,   -22,
   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,     2,     3,   nil,   nil,   nil,    15,    16,    17,
    18,    19,    20,    21,    26 ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 37, :_reduce_none,
  2, 37, :_reduce_none,
  1, 37, :_reduce_none,
  4, 38, :_reduce_4,
  5, 38, :_reduce_5,
  5, 38, :_reduce_6,
  6, 38, :_reduce_7,
  1, 41, :_reduce_8,
  0, 41, :_reduce_9,
  1, 39, :_reduce_10,
  2, 39, :_reduce_11,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  3, 40, :_reduce_15,
  2, 40, :_reduce_16,
  1, 40, :_reduce_17,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  2, 49, :_reduce_24,
  3, 49, :_reduce_25,
  2, 48, :_reduce_26,
  1, 48, :_reduce_27,
  2, 47, :_reduce_28,
  1, 47, :_reduce_29,
  2, 46, :_reduce_30,
  1, 46, :_reduce_31,
  2, 45, :_reduce_32,
  1, 45, :_reduce_33,
  1, 45, :_reduce_34,
  1, 45, :_reduce_35,
  1, 45, :_reduce_36,
  1, 45, :_reduce_37,
  1, 45, :_reduce_38,
  1, 45, :_reduce_39,
  1, 45, :_reduce_40,
  1, 50, :_reduce_41,
  1, 50, :_reduce_42,
  2, 44, :_reduce_43,
  1, 44, :_reduce_44 ]

racc_reduce_n = 45

racc_shift_n = 62

racc_token_table = {
  false => 0,
  :error => 1,
  :CHARSET_SYM => 2,
  :IMPORT_SYM => 3,
  :STRING => 4,
  :SEMI => 5,
  :IDENT => 6,
  :S => 7,
  :COMMA => 8,
  :LBRACE => 9,
  :RBRACE => 10,
  :STAR => 11,
  :HASH => 12,
  :LSQUARE => 13,
  :RSQUARE => 14,
  :EQUAL => 15,
  :INCLUDES => 16,
  :DASHMATCH => 17,
  :RPAREN => 18,
  :FUNCTION => 19,
  :GREATER => 20,
  :PLUS => 21,
  :SLASH => 22,
  :NUMBER => 23,
  :MINUS => 24,
  :LENGTH => 25,
  :PERCENTAGE => 26,
  :EMS => 27,
  :EXS => 28,
  :ANGLE => 29,
  :TIME => 30,
  :FREQ => 31,
  :URI => 32,
  :IMPORTANT_SYM => 33,
  :MEDIA_SYM => 34,
  ":" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CHARSET_SYM",
  "IMPORT_SYM",
  "STRING",
  "SEMI",
  "IDENT",
  "S",
  "COMMA",
  "LBRACE",
  "RBRACE",
  "STAR",
  "HASH",
  "LSQUARE",
  "RSQUARE",
  "EQUAL",
  "INCLUDES",
  "DASHMATCH",
  "RPAREN",
  "FUNCTION",
  "GREATER",
  "PLUS",
  "SLASH",
  "NUMBER",
  "MINUS",
  "LENGTH",
  "PERCENTAGE",
  "EMS",
  "EXS",
  "ANGLE",
  "TIME",
  "FREQ",
  "URI",
  "IMPORTANT_SYM",
  "MEDIA_SYM",
  "\":\"",
  "$start",
  "declarations",
  "declaration",
  "property",
  "expr",
  "prio",
  "operator",
  "term",
  "ident",
  "numeric",
  "string",
  "uri",
  "hexcolor",
  "function",
  "unary_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

module_eval(<<'.,.,', 'inlineparser.y', 15)
  def _reduce_4(val, _values, result)
     @handler.property val.first, val[2], val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 17)
  def _reduce_5(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 19)
  def _reduce_6(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 21)
  def _reduce_7(val, _values, result)
     @handler.property val.first, val[4], val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 24)
  def _reduce_8(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 25)
  def _reduce_9(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 28)
  def _reduce_10(val, _values, result)
     result = interpret_identifier val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 29)
  def _reduce_11(val, _values, result)
     result = interpret_identifier val.join 
    result
  end
.,.,

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'inlineparser.y', 38)
  def _reduce_15(val, _values, result)
            result = [val.first, val.last].flatten
        val.last.first.operator = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 41)
  def _reduce_16(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 42)
  def _reduce_17(val, _values, result)
     result = val 
    result
  end
.,.,

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

module_eval(<<'.,.,', 'inlineparser.y', 53)
  def _reduce_24(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 55)
  def _reduce_25(val, _values, result)
            name = interpret_identifier val.first.sub(/\($/, '')
        if name == 'rgb'
          result = Terms::Rgb.new(*val[1])
        else
          result = Terms::Function.new name, val[1]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 64)
  def _reduce_26(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 65)
  def _reduce_27(val, _values, result)
     result = Terms::Hash.new val.first.sub(/^#/, '') 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 68)
  def _reduce_28(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 69)
  def _reduce_29(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 71)
  def _reduce_30(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 72)
  def _reduce_31(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 76)
  def _reduce_32(val, _values, result)
            result = val[1]
        val[1].unary_operator = val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 80)
  def _reduce_33(val, _values, result)
            result = Terms::Number.new numeric val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 83)
  def _reduce_34(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, '%'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 86)
  def _reduce_35(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 90)
  def _reduce_36(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'em'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 93)
  def _reduce_37(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'ex'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 96)
  def _reduce_38(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 100)
  def _reduce_39(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 104)
  def _reduce_40(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 109)
  def _reduce_41(val, _values, result)
     result = :minus 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 110)
  def _reduce_42(val, _values, result)
     result = :plus 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 113)
  def _reduce_43(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'inlineparser.y', 114)
  def _reduce_44(val, _values, result)
     result = Terms::Ident.new interpret_identifier val.first 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class InlineParserBase
    end   # module CSS
  end   # module CSSPool
