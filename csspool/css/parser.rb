#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.9
# from Racc grammer file "".
#

require 'racc/parser.rb'
module CSSPool
  module CSS
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 333)

def numeric thing
  thing = thing.gsub(/[^\d.]/, '')
  Integer(thing) rescue Float(thing)
end

def interpret_identifier s
  interpret_escapes s
end

def interpret_uri s
  interpret_escapes s.match(/^url\((.*)\)$/mu)[1].strip.match(/^(['"]?)((?:\\.|.)*)\1$/mu)[2]
end

def interpret_string s
  interpret_escapes s.match(/^(['"])((?:\\.|.)*)\1$/mu)[2]
end

def interpret_escapes s
  token_exp = /\\([0-9a-fA-F]{1,6}(?:\r\n|\s)?)|\\(.)|(.)/mu
  characters = s.scan(token_exp).map do |u_escape, i_escape, ident|
    if u_escape
      code = u_escape.chomp.to_i 16
      code = 0xFFFD if code > 0x10FFFF
      [code].pack('U')
    elsif i_escape
      if i_escape == "\n"
        ''
      else
        i_escape
      end
    else
      ident
    end
  end.join ''
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,    10,    40,    54,    23,    17,    85,    70,    55,    25,
    30,    32,     9,    10,    30,    32,    23,    17,     3,    94,
    71,    25,    30,    32,    54,    96,    30,    32,    51,    55,
    41,    93,    15,    11,    24,    31,    33,    84,    48,    31,
    33,    49,    30,    32,    15,    11,    24,    31,    33,     9,
    10,    31,    33,    23,    17,    74,    48,    75,    25,    30,
    32,     9,    10,    30,    32,    23,    17,    31,    33,    97,
    25,    30,    32,    23,    17,    80,    81,    60,    25,    30,
    32,    15,    11,    24,    31,    33,    83,    82,    31,    33,
    61,    62,   124,    15,    11,    24,    31,    33,   127,    78,
   128,    15,    77,    24,    31,    33,    23,    17,   130,    23,
   129,    25,    30,    32,    25,    30,    32,    23,    30,    32,
    79,    72,    25,    30,    32,    23,    17,   126,    69,   125,
    25,    30,    32,   131,   133,    68,    24,    31,    33,    24,
    31,    33,    86,    31,    33,    23,    17,    24,    31,    33,
    25,    30,    32,    15,   140,    24,    31,    33,    92,    89,
    90,    91,   141,   111,    95,   123,   142,    80,   143,   144,
    58,   109,    57,    15,    43,    24,    31,    33,   108,   149,
   122,   150,   113,   121,   115,   114,   116,   117,   118,   119,
   120,   110,   111,   151,   123,   152,   153,   154,   133,    38,
   109,   157,   133,    34,   133,   nil,   nil,   108,   nil,   122,
   nil,   113,   121,   115,   114,   116,   117,   118,   119,   120,
   110,   111,   nil,   123,   nil,   nil,   nil,   nil,   nil,   109,
   nil,   nil,   nil,   nil,   nil,   nil,   108,   nil,   122,   nil,
   113,   121,   115,   114,   116,   117,   118,   119,   120,   110,
   111,   nil,   123,   148,   nil,   nil,   nil,   nil,   109,   nil,
   nil,   nil,   nil,   nil,   nil,   108,   nil,   122,   nil,   113,
   121,   115,   114,   116,   117,   118,   119,   120,   110,   111,
   nil,   123,   nil,   nil,   nil,   nil,   nil,   109,   nil,   nil,
   nil,   nil,   nil,   nil,   108,   nil,   122,   nil,   113,   121,
   115,   114,   116,   117,   118,   119,   120,   110,   111,   nil,
   123,   100,   nil,   nil,   nil,   nil,   109,   nil,   nil,   nil,
   nil,   nil,   nil,   108,   nil,   122,   nil,   113,   121,   115,
   114,   116,   117,   118,   119,   120,   110,   111,   nil,   123,
   nil,   135,   nil,   nil,   nil,   109,   nil,   nil,   137,   nil,
   nil,   nil,   108,   nil,   122,   136,   113,   121,   115,   114,
   116,   117,   118,   119,   120,   110,   122,   nil,   113,   121,
   115,   114,   116,   117,   118,   119,   120 ]

racc_action_check = [
     6,     6,    10,    83,     6,     6,    53,    33,    83,     6,
     6,     6,     2,     2,    21,    21,     2,     2,     1,    71,
    33,     2,     2,     2,    16,    76,    27,    27,    16,    16,
    10,    71,     6,     6,     6,     6,     6,    53,    15,    21,
    21,    15,    28,    28,     2,     2,     2,     2,     2,     7,
     7,    27,    27,     7,     7,    39,    39,    39,     7,     7,
     7,     5,     5,    29,    29,     5,     5,    28,    28,    80,
     5,     5,     5,    14,    14,    47,    47,    20,    14,    14,
    14,     7,     7,     7,     7,     7,    52,    50,    29,    29,
    20,    20,    85,     5,     5,     5,     5,     5,    90,    42,
    90,    14,    42,    14,    14,    14,    17,    17,    91,    58,
    91,    17,    17,    17,    58,    58,    58,    59,    26,    26,
    46,    38,    59,    59,    59,    13,    13,    89,    32,    89,
    13,    13,    13,    94,    99,    31,    17,    17,    17,    58,
    58,    58,    55,    26,    26,    12,    12,    59,    59,    59,
    12,    12,    12,    13,   102,    13,    13,    13,    69,    69,
    69,    69,   104,   148,    73,   148,   105,    73,   106,   107,
    19,   148,    18,    12,    11,    12,    12,    12,   148,   125,
   148,   126,   148,   148,   148,   148,   148,   148,   148,   148,
   148,   148,   138,   127,   138,   128,   129,   130,   134,     9,
   138,   145,   147,     3,   159,   nil,   nil,   138,   nil,   138,
   nil,   138,   138,   138,   138,   138,   138,   138,   138,   138,
   138,   100,   nil,   100,   nil,   nil,   nil,   nil,   nil,   100,
   nil,   nil,   nil,   nil,   nil,   nil,   100,   nil,   100,   nil,
   100,   100,   100,   100,   100,   100,   100,   100,   100,   100,
   124,   nil,   124,   124,   nil,   nil,   nil,   nil,   124,   nil,
   nil,   nil,   nil,   nil,   nil,   124,   nil,   124,   nil,   124,
   124,   124,   124,   124,   124,   124,   124,   124,   124,   108,
   nil,   108,   nil,   nil,   nil,   nil,   nil,   108,   nil,   nil,
   nil,   nil,   nil,   nil,   108,   nil,   108,   nil,   108,   108,
   108,   108,   108,   108,   108,   108,   108,   108,    84,   nil,
    84,    84,   nil,   nil,   nil,   nil,    84,   nil,   nil,   nil,
   nil,   nil,   nil,    84,   nil,    84,   nil,    84,    84,    84,
    84,    84,    84,    84,    84,    84,    84,   101,   nil,   101,
   nil,   101,   nil,   nil,   nil,   101,   nil,   nil,   101,   nil,
   nil,   nil,   101,   nil,   101,   101,   101,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   112,   nil,   112,   112,
   112,   112,   112,   112,   112,   112,   112 ]

racc_action_pointer = [
   nil,    18,    10,   203,   nil,    59,    -2,    47,   nil,   195,
    -2,   168,   139,   119,    67,    32,    18,   100,   163,   162,
    70,     2,   nil,   nil,   nil,   nil,   106,    14,    30,    51,
   nil,   129,   122,     1,   nil,   nil,   nil,   nil,   116,    50,
   nil,   nil,    95,   nil,   nil,   nil,   110,    67,   nil,   nil,
    77,   nil,    81,    -1,   nil,   136,   nil,   nil,   103,   111,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   144,
   nil,    13,   nil,   159,   nil,   nil,    20,   nil,   nil,   nil,
    63,   nil,   nil,    -3,   304,    54,   nil,   nil,   nil,   123,
    94,   104,   nil,   nil,   115,   nil,   nil,   nil,   nil,   101,
   217,   333,   147,   nil,   155,   159,   161,   162,   275,   nil,
   nil,   nil,   345,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   246,   165,   167,   179,   181,   182,
   183,   nil,   nil,   nil,   165,   nil,   nil,   nil,   188,   nil,
   nil,   nil,   nil,   nil,   nil,   183,   nil,   169,   159,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   171,
   nil ]

racc_action_default = [
    -1,  -110,  -110,  -110,    -2,    -6,    -7,    -8,    -9,  -110,
  -110,  -110,   -24,   -25,  -110,  -110,  -110,  -110,  -110,   -34,
   -36,   -41,   -42,   -43,   -44,   -45,   -46,   -47,   -48,   -49,
   -54,  -110,  -110,  -110,   161,    -3,    -4,    -5,  -110,  -110,
   -14,   -15,  -110,   -18,   -22,   -23,  -110,  -110,   -21,   -28,
  -110,   -30,   -68,  -110,   -75,  -110,   -31,   -32,  -110,  -110,
   -37,   -38,   -39,   -40,   -50,   -51,   -52,   -53,   -55,  -110,
   -63,  -110,   -10,  -110,   -12,   -13,  -110,   -17,   -19,   -26,
  -110,   -27,   -29,   -67,  -110,  -110,   -76,   -33,   -35,  -110,
  -110,  -110,   -62,   -64,  -110,   -11,   -16,   -20,   -66,   -74,
  -110,   -82,   -83,   -84,   -85,   -86,   -87,   -88,  -110,   -92,
   -94,   -96,  -110,   -98,   -99,  -100,  -101,  -102,  -103,  -104,
  -105,  -106,  -107,  -109,  -110,  -110,  -110,  -110,  -110,  -110,
  -110,   -65,   -69,   -73,   -74,   -77,   -78,   -79,  -110,   -81,
  -108,   -95,   -93,   -91,   -89,  -110,   -97,   -74,  -110,   -56,
   -57,   -58,   -59,   -60,   -61,   -70,   -80,   -90,   -71,   -74,
   -72 ]

racc_goto_table = [
    50,    99,   132,    47,    63,    44,    45,    46,     1,    64,
    65,    66,    67,    56,    76,    87,     4,   134,   139,    35,
    36,    37,    88,    59,    42,   145,    39,    73,     2,   138,
   146,   nil,   nil,   nil,   nil,   nil,   nil,   155,   nil,   nil,
   nil,   147,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   158,   nil,   nil,   nil,   nil,   156,   nil,   nil,   nil,   nil,
   nil,   nil,   160,   nil,   nil,   159,   nil,    98 ]

racc_goto_check = [
    16,    29,    30,     9,    22,     7,     7,     7,     1,    22,
    22,    22,    22,    15,    11,    17,     2,    29,    29,     2,
     2,     2,    18,    20,    10,    29,     8,     9,     3,    31,
    34,   nil,   nil,   nil,   nil,   nil,   nil,    30,   nil,   nil,
   nil,    29,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    30,   nil,   nil,   nil,   nil,    29,   nil,   nil,   nil,   nil,
   nil,   nil,    30,   nil,   nil,    29,   nil,    16 ]

racc_goto_pointer = [
   nil,     8,    14,    28,   nil,   nil,   nil,    -7,    16,   -12,
    13,   -28,   nil,   nil,   nil,    -4,   -16,   -43,   -37,   nil,
     3,   nil,   -17,   nil,   nil,   nil,   nil,   nil,   nil,   -83,
   -97,   -72,   nil,   nil,   -82,   nil,   nil,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,     6,     7,     8,   nil,   nil,
   nil,   nil,    12,    13,    14,    16,   nil,    18,    19,    20,
   nil,    21,    22,    26,    27,    28,    29,    52,    53,   nil,
   nil,   nil,   101,   102,   103,   104,   105,   106,   107,   112 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 42, :_reduce_1,
  2, 40, :_reduce_2,
  2, 41, :_reduce_none,
  2, 41, :_reduce_none,
  2, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  1, 41, :_reduce_none,
  3, 43, :_reduce_10,
  4, 44, :_reduce_11,
  3, 44, :_reduce_12,
  2, 47, :_reduce_none,
  1, 47, :_reduce_14,
  1, 47, :_reduce_15,
  4, 45, :_reduce_16,
  2, 49, :_reduce_none,
  1, 49, :_reduce_18,
  1, 50, :_reduce_19,
  3, 48, :_reduce_20,
  1, 48, :_reduce_21,
  2, 46, :_reduce_none,
  2, 46, :_reduce_none,
  1, 46, :_reduce_none,
  1, 46, :_reduce_none,
  3, 52, :_reduce_26,
  3, 53, :_reduce_27,
  2, 53, :_reduce_28,
  3, 51, :_reduce_29,
  2, 51, :_reduce_30,
  2, 54, :_reduce_31,
  2, 54, :_reduce_32,
  3, 56, :_reduce_33,
  1, 56, :_reduce_34,
  3, 57, :_reduce_35,
  1, 57, :_reduce_none,
  1, 59, :_reduce_37,
  1, 59, :_reduce_38,
  1, 59, :_reduce_39,
  2, 58, :_reduce_40,
  1, 58, :_reduce_41,
  1, 58, :_reduce_42,
  1, 60, :_reduce_43,
  1, 60, :_reduce_44,
  1, 60, :_reduce_45,
  1, 61, :_reduce_46,
  1, 61, :_reduce_47,
  1, 61, :_reduce_48,
  1, 61, :_reduce_49,
  2, 61, :_reduce_50,
  2, 61, :_reduce_51,
  2, 61, :_reduce_52,
  2, 61, :_reduce_53,
  1, 62, :_reduce_54,
  2, 63, :_reduce_55,
  5, 64, :_reduce_56,
  5, 64, :_reduce_57,
  5, 64, :_reduce_58,
  5, 64, :_reduce_59,
  5, 64, :_reduce_60,
  5, 64, :_reduce_61,
  3, 64, :_reduce_62,
  2, 65, :_reduce_63,
  3, 65, :_reduce_64,
  4, 65, :_reduce_65,
  3, 55, :_reduce_none,
  2, 55, :_reduce_none,
  1, 55, :_reduce_none,
  4, 66, :_reduce_69,
  5, 66, :_reduce_70,
  5, 66, :_reduce_71,
  6, 66, :_reduce_72,
  1, 69, :_reduce_73,
  0, 69, :_reduce_74,
  1, 67, :_reduce_75,
  2, 67, :_reduce_76,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 68, :_reduce_80,
  2, 68, :_reduce_81,
  1, 68, :_reduce_82,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  2, 77, :_reduce_89,
  3, 77, :_reduce_90,
  2, 76, :_reduce_91,
  1, 76, :_reduce_92,
  2, 75, :_reduce_93,
  1, 75, :_reduce_94,
  2, 74, :_reduce_95,
  1, 74, :_reduce_96,
  2, 73, :_reduce_97,
  1, 73, :_reduce_98,
  1, 73, :_reduce_99,
  1, 73, :_reduce_100,
  1, 73, :_reduce_101,
  1, 73, :_reduce_102,
  1, 73, :_reduce_103,
  1, 73, :_reduce_104,
  1, 73, :_reduce_105,
  1, 78, :_reduce_106,
  1, 78, :_reduce_107,
  2, 72, :_reduce_108,
  1, 72, :_reduce_109 ]

racc_reduce_n = 110

racc_shift_n = 161

racc_token_table = {
  false => 0,
  :error => 1,
  :CHARSET_SYM => 2,
  :IMPORT_SYM => 3,
  :STRING => 4,
  :SEMI => 5,
  :IDENT => 6,
  :S => 7,
  :COMMA => 8,
  :LBRACE => 9,
  :RBRACE => 10,
  :STAR => 11,
  :HASH => 12,
  :LSQUARE => 13,
  :RSQUARE => 14,
  :EQUAL => 15,
  :INCLUDES => 16,
  :DASHMATCH => 17,
  :RPAREN => 18,
  :FUNCTION => 19,
  :GREATER => 20,
  :PLUS => 21,
  :SLASH => 22,
  :NUMBER => 23,
  :MINUS => 24,
  :LENGTH => 25,
  :PERCENTAGE => 26,
  :EMS => 27,
  :EXS => 28,
  :ANGLE => 29,
  :TIME => 30,
  :FREQ => 31,
  :URI => 32,
  :IMPORTANT_SYM => 33,
  :MEDIA_SYM => 34,
  :NAMESPACE_SYM => 35,
  :PAGE_SYM => 36,
  "." => 37,
  ":" => 38 }

racc_nt_base = 39

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CHARSET_SYM",
  "IMPORT_SYM",
  "STRING",
  "SEMI",
  "IDENT",
  "S",
  "COMMA",
  "LBRACE",
  "RBRACE",
  "STAR",
  "HASH",
  "LSQUARE",
  "RSQUARE",
  "EQUAL",
  "INCLUDES",
  "DASHMATCH",
  "RPAREN",
  "FUNCTION",
  "GREATER",
  "PLUS",
  "SLASH",
  "NUMBER",
  "MINUS",
  "LENGTH",
  "PERCENTAGE",
  "EMS",
  "EXS",
  "ANGLE",
  "TIME",
  "FREQ",
  "URI",
  "IMPORTANT_SYM",
  "MEDIA_SYM",
  "NAMESPACE_SYM",
  "PAGE_SYM",
  "\".\"",
  "\":\"",
  "$start",
  "document",
  "stylesheet",
  "@1",
  "charset",
  "import",
  "namespace",
  "body",
  "import_location",
  "medium",
  "namespace_ident",
  "namespace_location",
  "ruleset",
  "media",
  "start_media",
  "start_selector",
  "declarations",
  "selectors",
  "selector",
  "simple_selector",
  "combinator",
  "element_name",
  "hcap",
  "hash",
  "class",
  "attrib",
  "pseudo",
  "declaration",
  "property",
  "expr",
  "prio",
  "operator",
  "term",
  "ident",
  "numeric",
  "string",
  "uri",
  "hexcolor",
  "function",
  "unary_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_1(val, _values, result)
     @handler.start_document 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_2(val, _values, result)
     @handler.end_document 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_10(val, _values, result)
     @handler.charset interpret_string(val[1]), {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_11(val, _values, result)
            @handler.import_style [val[2]].flatten, val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_12(val, _values, result)
            @handler.import_style [], val[1]
      
    result
  end
.,.,

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 35)
  def _reduce_14(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 36)
  def _reduce_15(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 40)
  def _reduce_16(val, _values, result)
          @handler.namespace val[1], val[2]
    
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_18(val, _values, result)
     result = Terms::Ident.new interpret_identifier val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_19(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_20(val, _values, result)
            result = [val.first, Terms::Ident.new(interpret_identifier val.last)]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_21(val, _values, result)
            result = Terms::Ident.new interpret_identifier val.first
      
    result
  end
.,.,

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

# reduce 25 omitted

module_eval(<<'.,.,', 'parser.y', 65)
  def _reduce_26(val, _values, result)
     @handler.end_media val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_27(val, _values, result)
            result = [val[1]].flatten
        @handler.start_media result
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 72)
  def _reduce_28(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_29(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 79)
  def _reduce_30(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 83)
  def _reduce_31(val, _values, result)
     result = val.last 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 85)
  def _reduce_32(val, _values, result)
            @handler.start_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 91)
  def _reduce_33(val, _values, result)
            # FIXME: should always garantee array
        sel = Selector.new(val.first, {})
        result = [sel, val[2]].flatten
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 97)
  def _reduce_34(val, _values, result)
            result = [Selector.new(val.first, {})]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 103)
  def _reduce_35(val, _values, result)
            val = val.flatten
        val[2].combinator = val.delete_at 1
        result = val
      
    result
  end
.,.,

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.y', 110)
  def _reduce_37(val, _values, result)
     result = :s 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_38(val, _values, result)
     result = :> 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 112)
  def _reduce_39(val, _values, result)
     result = :+ 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 116)
  def _reduce_40(val, _values, result)
            selector = val.first
        selector.additional_selectors = val.last
        result = [selector]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 120)
  def _reduce_41(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 123)
  def _reduce_42(val, _values, result)
            ss = Selectors::Simple.new nil, nil
        ss.additional_selectors = val.flatten
        result = [ss]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 129)
  def _reduce_43(val, _values, result)
     result = Selectors::Type.new interpret_identifier val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 130)
  def _reduce_44(val, _values, result)
     result = Selectors::Page.new val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_45(val, _values, result)
     result = Selectors::Universal.new val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 134)
  def _reduce_46(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 135)
  def _reduce_47(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 136)
  def _reduce_48(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 137)
  def _reduce_49(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_50(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_51(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_52(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 141)
  def _reduce_53(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 145)
  def _reduce_54(val, _values, result)
            result = Selectors::Id.new interpret_identifier val.first.sub(/^#/, '')
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 149)
  def _reduce_55(val, _values, result)
            result = Selectors::Class.new interpret_identifier val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 154)
  def _reduce_56(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_57(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_58(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 175)
  def _reduce_59(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 182)
  def _reduce_60(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 189)
  def _reduce_61(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 196)
  def _reduce_62(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          nil,
          Selectors::Attribute::SET
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 205)
  def _reduce_63(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1])
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 210)
  def _reduce_64(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          ''
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_65(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          interpret_identifier(val[2])
        )
      
    result
  end
.,.,

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

module_eval(<<'.,.,', 'parser.y', 229)
  def _reduce_69(val, _values, result)
     @handler.property val.first, val[2], val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 231)
  def _reduce_70(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 233)
  def _reduce_71(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 235)
  def _reduce_72(val, _values, result)
     @handler.property val.first, val[4], val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 238)
  def _reduce_73(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 239)
  def _reduce_74(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 242)
  def _reduce_75(val, _values, result)
     result = interpret_identifier val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 243)
  def _reduce_76(val, _values, result)
     result = interpret_identifier val.join 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.y', 252)
  def _reduce_80(val, _values, result)
            result = [val.first, val.last].flatten
        val.last.first.operator = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 255)
  def _reduce_81(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 256)
  def _reduce_82(val, _values, result)
     result = val 
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

module_eval(<<'.,.,', 'parser.y', 267)
  def _reduce_89(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 269)
  def _reduce_90(val, _values, result)
            name = interpret_identifier val.first.sub(/\($/, '')
        if name == 'rgb'
          result = Terms::Rgb.new(*val[1])
        else
          result = Terms::Function.new name, val[1]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 278)
  def _reduce_91(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 279)
  def _reduce_92(val, _values, result)
     result = Terms::Hash.new val.first.sub(/^#/, '') 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 282)
  def _reduce_93(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 283)
  def _reduce_94(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 285)
  def _reduce_95(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 286)
  def _reduce_96(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 290)
  def _reduce_97(val, _values, result)
            result = val[1]
        val[1].unary_operator = val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 294)
  def _reduce_98(val, _values, result)
            result = Terms::Number.new numeric val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 297)
  def _reduce_99(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, '%'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 300)
  def _reduce_100(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 304)
  def _reduce_101(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'em'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 307)
  def _reduce_102(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'ex'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 310)
  def _reduce_103(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 314)
  def _reduce_104(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 318)
  def _reduce_105(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 323)
  def _reduce_106(val, _values, result)
     result = :minus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 324)
  def _reduce_107(val, _values, result)
     result = :plus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 327)
  def _reduce_108(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 328)
  def _reduce_109(val, _values, result)
     result = Terms::Ident.new interpret_identifier val.first 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module CSS
  end   # module CSSPool
